<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mfq.dao.JuxinliMapper" >
  <resultMap id="BaseResultMap" type="com.mfq.bean.Juxinli" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="uid" property="uid" jdbcType="BIGINT" />
    <result column="taobao" property="taobao" jdbcType="VARCHAR" />
    <result column="jd" property="jd" jdbcType="VARCHAR" />
    <result column="taobao_password" property="taobaoPassword" jdbcType="VARCHAR" />
    <result column="jd_password" property="jdPassword" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="mobile_password" property="mobilePassword" jdbcType="VARCHAR" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, uid, taobao, jd, taobao_password, jd_password, mobile, mobile_password, created_at, 
    updated_at
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mfq.bean.JuxinliExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from juxinli
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from juxinli
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from juxinli
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.mfq.bean.JuxinliExample" >
    delete from juxinli
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mfq.bean.Juxinli" >
    insert into juxinli (id, uid, taobao, 
      jd, taobao_password, jd_password, 
      mobile, mobile_password, created_at, 
      updated_at)
    values (#{id,jdbcType=BIGINT}, #{uid,jdbcType=BIGINT}, #{taobao,jdbcType=VARCHAR}, 
      #{jd,jdbcType=VARCHAR}, #{taobaoPassword,jdbcType=VARCHAR}, #{jdPassword,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{mobilePassword,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.mfq.bean.Juxinli" >
    insert into juxinli
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="taobao != null" >
        taobao,
      </if>
      <if test="jd != null" >
        jd,
      </if>
      <if test="taobaoPassword != null" >
        taobao_password,
      </if>
      <if test="jdPassword != null" >
        jd_password,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="mobilePassword != null" >
        mobile_password,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="taobao != null" >
        #{taobao,jdbcType=VARCHAR},
      </if>
      <if test="jd != null" >
        #{jd,jdbcType=VARCHAR},
      </if>
      <if test="taobaoPassword != null" >
        #{taobaoPassword,jdbcType=VARCHAR},
      </if>
      <if test="jdPassword != null" >
        #{jdPassword,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="mobilePassword != null" >
        #{mobilePassword,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mfq.bean.JuxinliExample" resultType="java.lang.Integer" >
    select count(*) from juxinli
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update juxinli
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=BIGINT},
      </if>
      <if test="record.taobao != null" >
        taobao = #{record.taobao,jdbcType=VARCHAR},
      </if>
      <if test="record.jd != null" >
        jd = #{record.jd,jdbcType=VARCHAR},
      </if>
      <if test="record.taobaoPassword != null" >
        taobao_password = #{record.taobaoPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.jdPassword != null" >
        jd_password = #{record.jdPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null" >
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.mobilePassword != null" >
        mobile_password = #{record.mobilePassword,jdbcType=VARCHAR},
      </if>
      <if test="record.createdAt != null" >
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null" >
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update juxinli
    set id = #{record.id,jdbcType=BIGINT},
      uid = #{record.uid,jdbcType=BIGINT},
      taobao = #{record.taobao,jdbcType=VARCHAR},
      jd = #{record.jd,jdbcType=VARCHAR},
      taobao_password = #{record.taobaoPassword,jdbcType=VARCHAR},
      jd_password = #{record.jdPassword,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      mobile_password = #{record.mobilePassword,jdbcType=VARCHAR},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mfq.bean.Juxinli" >
    update juxinli
    <set >
      <if test="uid != null" >
        uid = #{uid,jdbcType=BIGINT},
      </if>
      <if test="taobao != null" >
        taobao = #{taobao,jdbcType=VARCHAR},
      </if>
      <if test="jd != null" >
        jd = #{jd,jdbcType=VARCHAR},
      </if>
      <if test="taobaoPassword != null" >
        taobao_password = #{taobaoPassword,jdbcType=VARCHAR},
      </if>
      <if test="jdPassword != null" >
        jd_password = #{jdPassword,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="mobilePassword != null" >
        mobile_password = #{mobilePassword,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mfq.bean.Juxinli" >
    update juxinli
    set uid = #{uid,jdbcType=BIGINT},
      taobao = #{taobao,jdbcType=VARCHAR},
      jd = #{jd,jdbcType=VARCHAR},
      taobao_password = #{taobaoPassword,jdbcType=VARCHAR},
      jd_password = #{jdPassword,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      mobile_password = #{mobilePassword,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>